using System;
using StateMachineExample.Domain;
using StateMachineExample.Messages;
using StateMachineExample.Services;

namespace StateMachineExample
{
    class Program
    {
        static void Main()
        {
            var aggregate = new PaymentAggregate();

            Console.WriteLine(aggregate.CurrentState);

            aggregate.Handle(new CapturePayment {CardNumber = "1234", Name = "Bob"});
            aggregate.Handle(new AcceptPayment());

            // In reality would expect this event to have been generated by something listening to
            // the previous event (AcceptRequested) generated
            aggregate.Handle(new DataCashAccepted { AuthCode = new DataCashClient().Auth()});

            Console.WriteLine(aggregate.CurrentState);
            Console.ReadLine();
        }
    }
}
